# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Tag(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Tag - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'name': 'str',
            'time_type': 'str',
            'object_type': 'str',
            'synchronization': 'str',
            'description': 'str',
            'last_validated_time': 'float',
            'end_of_validity': 'float',
            'insertion_time': 'datetime',
            'modification_time': 'datetime',
            'iovs': 'list[Iov]',
            'global_tag_maps': 'list[GlobalTagMap]',
            'href': 'str',
            'res_id': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'time_type': 'timeType',
            'object_type': 'objectType',
            'synchronization': 'synchronization',
            'description': 'description',
            'last_validated_time': 'lastValidatedTime',
            'end_of_validity': 'endOfValidity',
            'insertion_time': 'insertionTime',
            'modification_time': 'modificationTime',
            'iovs': 'iovs',
            'global_tag_maps': 'globalTagMaps',
            'href': 'href',
            'res_id': 'resId'
        }

        self._id = None
        self._name = None
        self._time_type = None
        self._object_type = None
        self._synchronization = None
        self._description = None
        self._last_validated_time = None
        self._end_of_validity = None
        self._insertion_time = None
        self._modification_time = None
        self._iovs = None
        self._global_tag_maps = None
        self._href = None
        self._res_id = None

    @property
    def id(self):
        """
        Gets the id of this Tag.


        :return: The id of this Tag.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this Tag.


        :param id: The id of this Tag.
        :type: int
        """
        self._id = id

    @property
    def name(self):
        """
        Gets the name of this Tag.


        :return: The name of this Tag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this Tag.


        :param name: The name of this Tag.
        :type: str
        """
        self._name = name

    @property
    def time_type(self):
        """
        Gets the time_type of this Tag.


        :return: The time_type of this Tag.
        :rtype: str
        """
        return self._time_type

    @time_type.setter
    def time_type(self, time_type):
        """
        Sets the time_type of this Tag.


        :param time_type: The time_type of this Tag.
        :type: str
        """
        self._time_type = time_type

    @property
    def object_type(self):
        """
        Gets the object_type of this Tag.


        :return: The object_type of this Tag.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """
        Sets the object_type of this Tag.


        :param object_type: The object_type of this Tag.
        :type: str
        """
        self._object_type = object_type

    @property
    def synchronization(self):
        """
        Gets the synchronization of this Tag.


        :return: The synchronization of this Tag.
        :rtype: str
        """
        return self._synchronization

    @synchronization.setter
    def synchronization(self, synchronization):
        """
        Sets the synchronization of this Tag.


        :param synchronization: The synchronization of this Tag.
        :type: str
        """
        self._synchronization = synchronization

    @property
    def description(self):
        """
        Gets the description of this Tag.


        :return: The description of this Tag.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this Tag.


        :param description: The description of this Tag.
        :type: str
        """
        self._description = description

    @property
    def last_validated_time(self):
        """
        Gets the last_validated_time of this Tag.


        :return: The last_validated_time of this Tag.
        :rtype: float
        """
        return self._last_validated_time

    @last_validated_time.setter
    def last_validated_time(self, last_validated_time):
        """
        Sets the last_validated_time of this Tag.


        :param last_validated_time: The last_validated_time of this Tag.
        :type: float
        """
        self._last_validated_time = last_validated_time

    @property
    def end_of_validity(self):
        """
        Gets the end_of_validity of this Tag.


        :return: The end_of_validity of this Tag.
        :rtype: float
        """
        return self._end_of_validity

    @end_of_validity.setter
    def end_of_validity(self, end_of_validity):
        """
        Sets the end_of_validity of this Tag.


        :param end_of_validity: The end_of_validity of this Tag.
        :type: float
        """
        self._end_of_validity = end_of_validity

    @property
    def insertion_time(self):
        """
        Gets the insertion_time of this Tag.


        :return: The insertion_time of this Tag.
        :rtype: datetime
        """
        return self._insertion_time

    @insertion_time.setter
    def insertion_time(self, insertion_time):
        """
        Sets the insertion_time of this Tag.


        :param insertion_time: The insertion_time of this Tag.
        :type: datetime
        """
        self._insertion_time = insertion_time

    @property
    def modification_time(self):
        """
        Gets the modification_time of this Tag.


        :return: The modification_time of this Tag.
        :rtype: datetime
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """
        Sets the modification_time of this Tag.


        :param modification_time: The modification_time of this Tag.
        :type: datetime
        """
        self._modification_time = modification_time

    @property
    def iovs(self):
        """
        Gets the iovs of this Tag.


        :return: The iovs of this Tag.
        :rtype: list[Iov]
        """
        return self._iovs

    @iovs.setter
    def iovs(self, iovs):
        """
        Sets the iovs of this Tag.


        :param iovs: The iovs of this Tag.
        :type: list[Iov]
        """
        self._iovs = iovs

    @property
    def global_tag_maps(self):
        """
        Gets the global_tag_maps of this Tag.


        :return: The global_tag_maps of this Tag.
        :rtype: list[GlobalTagMap]
        """
        return self._global_tag_maps

    @global_tag_maps.setter
    def global_tag_maps(self, global_tag_maps):
        """
        Sets the global_tag_maps of this Tag.


        :param global_tag_maps: The global_tag_maps of this Tag.
        :type: list[GlobalTagMap]
        """
        self._global_tag_maps = global_tag_maps

    @property
    def href(self):
        """
        Gets the href of this Tag.


        :return: The href of this Tag.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this Tag.


        :param href: The href of this Tag.
        :type: str
        """
        self._href = href

    @property
    def res_id(self):
        """
        Gets the res_id of this Tag.


        :return: The res_id of this Tag.
        :rtype: str
        """
        return self._res_id

    @res_id.setter
    def res_id(self, res_id):
        """
        Sets the res_id of this Tag.


        :param res_id: The res_id of this Tag.
        :type: str
        """
        self._res_id = res_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
