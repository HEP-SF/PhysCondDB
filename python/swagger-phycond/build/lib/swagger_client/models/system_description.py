# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class SystemDescription(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SystemDescription - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'node_fullpath': 'str',
            'schema_name': 'str',
            'tag_name_root': 'str',
            'node_description': 'str',
            'group_size': 'float',
            'tags': 'list[Tag]',
            'href': 'str',
            'res_id': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'node_fullpath': 'nodeFullpath',
            'schema_name': 'schemaName',
            'tag_name_root': 'tagNameRoot',
            'node_description': 'nodeDescription',
            'group_size': 'groupSize',
            'tags': 'tags',
            'href': 'href',
            'res_id': 'resId'
        }

        self._id = None
        self._node_fullpath = None
        self._schema_name = None
        self._tag_name_root = None
        self._node_description = None
        self._group_size = None
        self._tags = None
        self._href = None
        self._res_id = None

    @property
    def id(self):
        """
        Gets the id of this SystemDescription.


        :return: The id of this SystemDescription.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this SystemDescription.


        :param id: The id of this SystemDescription.
        :type: int
        """
        self._id = id

    @property
    def node_fullpath(self):
        """
        Gets the node_fullpath of this SystemDescription.


        :return: The node_fullpath of this SystemDescription.
        :rtype: str
        """
        return self._node_fullpath

    @node_fullpath.setter
    def node_fullpath(self, node_fullpath):
        """
        Sets the node_fullpath of this SystemDescription.


        :param node_fullpath: The node_fullpath of this SystemDescription.
        :type: str
        """
        self._node_fullpath = node_fullpath

    @property
    def schema_name(self):
        """
        Gets the schema_name of this SystemDescription.


        :return: The schema_name of this SystemDescription.
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """
        Sets the schema_name of this SystemDescription.


        :param schema_name: The schema_name of this SystemDescription.
        :type: str
        """
        self._schema_name = schema_name

    @property
    def tag_name_root(self):
        """
        Gets the tag_name_root of this SystemDescription.


        :return: The tag_name_root of this SystemDescription.
        :rtype: str
        """
        return self._tag_name_root

    @tag_name_root.setter
    def tag_name_root(self, tag_name_root):
        """
        Sets the tag_name_root of this SystemDescription.


        :param tag_name_root: The tag_name_root of this SystemDescription.
        :type: str
        """
        self._tag_name_root = tag_name_root

    @property
    def node_description(self):
        """
        Gets the node_description of this SystemDescription.


        :return: The node_description of this SystemDescription.
        :rtype: str
        """
        return self._node_description

    @node_description.setter
    def node_description(self, node_description):
        """
        Sets the node_description of this SystemDescription.


        :param node_description: The node_description of this SystemDescription.
        :type: str
        """
        self._node_description = node_description

    @property
    def group_size(self):
        """
        Gets the group_size of this SystemDescription.


        :return: The group_size of this SystemDescription.
        :rtype: float
        """
        return self._group_size

    @group_size.setter
    def group_size(self, group_size):
        """
        Sets the group_size of this SystemDescription.


        :param group_size: The group_size of this SystemDescription.
        :type: float
        """
        self._group_size = group_size

    @property
    def tags(self):
        """
        Gets the tags of this SystemDescription.


        :return: The tags of this SystemDescription.
        :rtype: list[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """
        Sets the tags of this SystemDescription.


        :param tags: The tags of this SystemDescription.
        :type: list[Tag]
        """
        self._tags = tags

    @property
    def href(self):
        """
        Gets the href of this SystemDescription.


        :return: The href of this SystemDescription.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this SystemDescription.


        :param href: The href of this SystemDescription.
        :type: str
        """
        self._href = href

    @property
    def res_id(self):
        """
        Gets the res_id of this SystemDescription.


        :return: The res_id of this SystemDescription.
        :rtype: str
        """
        return self._res_id

    @res_id.setter
    def res_id(self, res_id):
        """
        Sets the res_id of this SystemDescription.


        :param res_id: The res_id of this SystemDescription.
        :type: str
        """
        self._res_id = res_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
