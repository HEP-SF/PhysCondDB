# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class GlobalTagMap(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        GlobalTagMap - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'system_tag': 'Tag',
            'global_tag': 'GlobalTag',
            'record': 'str',
            'label': 'str',
            'tag_name': 'str',
            'global_tag_name': 'str',
            'href': 'str',
            'res_id': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'system_tag': 'systemTag',
            'global_tag': 'globalTag',
            'record': 'record',
            'label': 'label',
            'tag_name': 'tagName',
            'global_tag_name': 'globalTagName',
            'href': 'href',
            'res_id': 'resId'
        }

        self._id = None
        self._system_tag = None
        self._global_tag = None
        self._record = None
        self._label = None
        self._tag_name = None
        self._global_tag_name = None
        self._href = None
        self._res_id = None

    @property
    def id(self):
        """
        Gets the id of this GlobalTagMap.


        :return: The id of this GlobalTagMap.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this GlobalTagMap.


        :param id: The id of this GlobalTagMap.
        :type: int
        """
        self._id = id

    @property
    def system_tag(self):
        """
        Gets the system_tag of this GlobalTagMap.


        :return: The system_tag of this GlobalTagMap.
        :rtype: Tag
        """
        return self._system_tag

    @system_tag.setter
    def system_tag(self, system_tag):
        """
        Sets the system_tag of this GlobalTagMap.


        :param system_tag: The system_tag of this GlobalTagMap.
        :type: Tag
        """
        self._system_tag = system_tag

    @property
    def global_tag(self):
        """
        Gets the global_tag of this GlobalTagMap.


        :return: The global_tag of this GlobalTagMap.
        :rtype: GlobalTag
        """
        return self._global_tag

    @global_tag.setter
    def global_tag(self, global_tag):
        """
        Sets the global_tag of this GlobalTagMap.


        :param global_tag: The global_tag of this GlobalTagMap.
        :type: GlobalTag
        """
        self._global_tag = global_tag

    @property
    def record(self):
        """
        Gets the record of this GlobalTagMap.


        :return: The record of this GlobalTagMap.
        :rtype: str
        """
        return self._record

    @record.setter
    def record(self, record):
        """
        Sets the record of this GlobalTagMap.


        :param record: The record of this GlobalTagMap.
        :type: str
        """
        self._record = record

    @property
    def label(self):
        """
        Gets the label of this GlobalTagMap.


        :return: The label of this GlobalTagMap.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """
        Sets the label of this GlobalTagMap.


        :param label: The label of this GlobalTagMap.
        :type: str
        """
        self._label = label

    @property
    def tag_name(self):
        """
        Gets the tag_name of this GlobalTagMap.


        :return: The tag_name of this GlobalTagMap.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """
        Sets the tag_name of this GlobalTagMap.


        :param tag_name: The tag_name of this GlobalTagMap.
        :type: str
        """
        self._tag_name = tag_name

    @property
    def global_tag_name(self):
        """
        Gets the global_tag_name of this GlobalTagMap.


        :return: The global_tag_name of this GlobalTagMap.
        :rtype: str
        """
        return self._global_tag_name

    @global_tag_name.setter
    def global_tag_name(self, global_tag_name):
        """
        Sets the global_tag_name of this GlobalTagMap.


        :param global_tag_name: The global_tag_name of this GlobalTagMap.
        :type: str
        """
        self._global_tag_name = global_tag_name

    @property
    def href(self):
        """
        Gets the href of this GlobalTagMap.


        :return: The href of this GlobalTagMap.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this GlobalTagMap.


        :param href: The href of this GlobalTagMap.
        :type: str
        """
        self._href = href

    @property
    def res_id(self):
        """
        Gets the res_id of this GlobalTagMap.


        :return: The res_id of this GlobalTagMap.
        :rtype: str
        """
        return self._res_id

    @res_id.setter
    def res_id(self, res_id):
        """
        Sets the res_id of this GlobalTagMap.


        :param res_id: The res_id of this GlobalTagMap.
        :type: str
        """
        self._res_id = res_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
