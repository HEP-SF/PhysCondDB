# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class IovGroups(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        IovGroups - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'since': 'float',
            'since_string': 'str',
            'niovs': 'int'
        }

        self.attribute_map = {
            'since': 'since',
            'since_string': 'sinceString',
            'niovs': 'niovs'
        }

        self._since = None
        self._since_string = None
        self._niovs = None

    @property
    def since(self):
        """
        Gets the since of this IovGroups.


        :return: The since of this IovGroups.
        :rtype: float
        """
        return self._since

    @since.setter
    def since(self, since):
        """
        Sets the since of this IovGroups.


        :param since: The since of this IovGroups.
        :type: float
        """
        self._since = since

    @property
    def since_string(self):
        """
        Gets the since_string of this IovGroups.


        :return: The since_string of this IovGroups.
        :rtype: str
        """
        return self._since_string

    @since_string.setter
    def since_string(self, since_string):
        """
        Sets the since_string of this IovGroups.


        :param since_string: The since_string of this IovGroups.
        :type: str
        """
        self._since_string = since_string

    @property
    def niovs(self):
        """
        Gets the niovs of this IovGroups.


        :return: The niovs of this IovGroups.
        :rtype: int
        """
        return self._niovs

    @niovs.setter
    def niovs(self, niovs):
        """
        Sets the niovs of this IovGroups.


        :param niovs: The niovs of this IovGroups.
        :type: int
        """
        self._niovs = niovs

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
