package conddb.data;

// Generated Aug 25, 2014 4:52:00 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.time.Instant;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import conddb.data.utils.json.serializers.TimestampDeserializer;
import conddb.data.utils.json.serializers.TimestampSerializer;

/**
 * Iov generated by hbm2java
 */
@Entity
@Table(name = "PHCOND_IOV", uniqueConstraints = { @UniqueConstraint(columnNames = {
		"SINCE", "INSERTION_TIME", "TAG_ID" }) })
//@//JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "@id")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id", scope = Iov.class)
public class Iov extends conddb.data.AfEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7499748521778474013L;
	public static final long MAX_TIME = 999999999999999L;
	public static final long TO_NANOSECONDS = 1000000L;
	
	private Long id;
	private BigDecimal since;
	private String sinceString;
	private Timestamp insertionTime;

	private Payload payload;
	private Tag tag;
	private String hash;
	
	public Iov() {
	}

	public Iov(BigDecimal since, String sincestr,
			Payload payload, Tag tag) {
		this.since = since;
		this.sinceString = sincestr;
		this.payload = payload;
		this.tag = tag;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "IOV_ID", nullable=false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "SINCE", nullable = false, precision = 22, scale = 0)
	public BigDecimal getSince() {
		return this.since;
	}

	public void setSince(BigDecimal since) {
		this.since = since;
	}

	@Column(name = "SINCE_STRING", nullable = false, length = 255)
	public String getSinceString() {
		return sinceString;
	}

	public void setSinceString(String sinceString) {
		this.sinceString = sinceString;
	}

	@JsonDeserialize(using = TimestampDeserializer.class)
	@JsonSerialize(using = TimestampSerializer.class)
	@Column(name = "INSERTION_TIME", nullable = false)
	public Timestamp getInsertionTime() {
		return this.insertionTime;
	}

	public void setInsertionTime(Timestamp insertionTime) {
		this.insertionTime = insertionTime;
	}
	
	@Column(name = "PAYLOAD_HASH", nullable = false, updatable = false, insertable=false)
	public String getHash() {
		return this.hash;
	}
	
	public void setHash(String hash) {
		this.hash = hash;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAYLOAD_HASH", nullable = false, updatable = false)
	public Payload getPayload() {
		return this.payload;
	}

	public void setPayload(Payload payload) {
		this.payload = payload;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAG_ID", nullable = false, updatable = false)
	public Tag getTag() {
		return this.tag;
	}

	public void setTag(Tag tag) {
		this.tag = tag;
	}

	@PrePersist
    public void prePersist() {
		Instant now = Instant.now();
        Timestamp nowt = Timestamp.from(now);
        this.insertionTime = nowt;
    }

	@Override
	public String toString() {
		return "Iov [id=" + id + ", since=" + since + ", sinceString=" + sinceString + ", insertionTime="
				+ insertionTime + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((insertionTime == null) ? 0 : insertionTime.hashCode());
		result = prime * result + ((since == null) ? 0 : since.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Iov other = (Iov) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (insertionTime == null) {
			if (other.insertionTime != null)
				return false;
		} else if (!insertionTime.equals(other.insertionTime))
			return false;
		if (since == null) {
			if (other.since != null)
				return false;
		} else if (!since.equals(other.since))
			return false;
		return true;
	}

}
